<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAOsAAADrASts18IAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAB6klEQVRYR+2Wy0pWURTHf6CNzJqJWBpNegGfwpFOwooQ1EGjqEgQRFBHDn2BalB0oUETL4g9QyJE
        dCEqceJINBp4V/6wNiwWp3PxOzjx+8HiO+x12d9eZ5+1FjS5ALTEhUa4DjwEFoDvwJbJb+AD8AjoMNsu
        4A+wCdwMcSrTDTwD9oGTApHNc2DYrc3GgFUYsFP6TXaBT3ZqyaqteZs99/wzBi3LA+DYBfoC3AfaoiHQ
        bjrZxKxIeqNDEbeBI3PW7yTQGo0ymMvYXFLpNVxzadfmd6JBDvF1JXkXDfN46RwnorKAfuAt8N7JC+BW
        NPwfuvHptn8umfZaeeJOPxSV58GibX4AXI7K8+CX/QF953VxCegDOqMii1RQVG7rQp+gYv6Iiiz+mfF8
        VDTAksVU7EI2zFjltS7WLKaaViFKfbqEV6LyDFwFDqu81nH3GaqjNcqoi/c0KrNQGdbp5aDGoht8VuT7
        1WKpuGmeKMUb96+norIC8k1xXkVlHsrCjjmqGanNVkU+qZtuW8xK3HOzgAJNl+wLSvuM21wx7kajsujS
        +IHkm11M3eyI1kZsVkz28n0cDasy6IpTEl0odcqPJnqO8+JfG2pq4Qbw2qU1T2SjeUI+tdNjdWLZKqYG
        T6V5HVgBxsymSZPSnAL3s7Wf/JY+rgAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="lblChuThichMo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAD
        rwAAA68BGB6xfQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAGySURBVDhPfZI9
        SxxRFIYHhKDez4kLroHoWoRJds45siyGQDoRK9MLSbAILNbqstFoKVpZaWWhSWllaRcCVgr+ALFI429Y
        79yA5iSZITte94WX4c6c85yPuVEURREAfEXETj8DwPc0Tac5vkeIeEREBy4W6I367I3q8NMp9bIUt0FE
        6w8g/AERN72WG3y+i6IBb8ScN6pdittFxBYinhDRTBDwS6l5Z8S2k7JeBtRqtUFEjIkIWknS5iK9ACO/
        ZFZMZdY27oaHx7wVK/8Dcs0lyeR1Jb70Sizfav2iAHTjofHMqFZuhpSTWV2rFq9jvZBZeea0+FAAAIBK
        m+9ZIov344zcclK+ymKz5LXcLADl4JAyLT7ymM6IHR6xawcn+nXQIaJ2mqZPODmvflGtvv4xNrrttFz4
        Q80BjUbjGSLOhkxEb3hern4T6/23AJ+KtnJAs9msIGIz5Kl6Pc2s3OPLdVV5ukpEiw8AoRFyn1erqTfy
        2Blx+i5JJoOA4kVAfMm8Fcs8AgA8DwL6dfBzZGQmv3lBABF9KyeFTERrALBPRH//wD/AYTnwMQPAFiK+
        L5J/6x7Ovsv33VAk+AAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="lblChuThichDong.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAJ
        0QAACdEBMW1TLAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAADMSURBVDhPtZI9
        CgIxEIW/QtBL6BFsFMTOAwiKIF7EG1hZeQFLK621svUOdou9jaWFPwxMYHaMMVv4wcAm+/J25m2gTA+Y
        fqkJ0HL6Eivg9aPuwMAfDNyAud801IATsPYvAk9tVdrcAFtTS9XsdB1FWhSDZsIgrKMEgxRZBl0Ny4Z3
        Vk2WQR0YuV/YV00lAyl5toy1ovgRpDpelCIV4gI46CiFfuSDBzDzm0obuOpdOQINLxAuelFCcDaDLIOh
        mth7HzKQEfZmhErZ/Jc3du1EMUnzEzsAAAAASUVORK5CYII=
</value>
  </data>
</root>